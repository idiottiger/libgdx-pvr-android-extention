/* DO NOT EDIT THIS FILE - it is machine generated */
#include <jni.h>
#include "CCTexturePVR.h"
/* Header for class pkg_prvextention_PVRTextureData */

#ifndef _Included_pkg_prvextention_PVRTextureData
#define _Included_pkg_prvextention_PVRTextureData
#ifdef __cplusplus
extern "C" {
#endif

#undef pkg_prvextention_PVRTextureData_TYPE_RESOURCE_ASSETS
#define pkg_prvextention_PVRTextureData_TYPE_RESOURCE_ASSETS 1L
#undef pkg_prvextention_PVRTextureData_TYPE_RESOURCE_EXTERNAL
#define pkg_prvextention_PVRTextureData_TYPE_RESOURCE_EXTERNAL 2L

/*
 * Class:     pkg_prvextention_PVRTextureData
 * Method:    native_setTextureCacheEnable
 * Signature: (Z)V
 */JNIEXPORT void JNICALL Java_pkg_prvextention_PVRTextureData_native_1setTextureCacheEnable(
		JNIEnv *, jclass, jboolean);

/*
 * Class:     pkg_prvextention_PVRTextureData
 * Method:    native_disposeAllTextureCache
 * Signature: ()V
 */JNIEXPORT void JNICALL Java_pkg_prvextention_PVRTextureData_native_1disposeAllTextureCache(
		JNIEnv *, jclass);

/*
 * Class:     pkg_prvextention_PVRTextureData
 * Method:    native_preparePVRTexture
 * Signature: (ILandroid/content/res/AssetManager;Ljava/lang/String;I)V
 */JNIEXPORT void JNICALL Java_pkg_prvextention_PVRTextureData_native_1preparePVRTexture(
		JNIEnv *, jobject, jint, jobject, jstring, jint);

/*
 * Class:     pkg_prvextention_PVRTextureData
 * Method:    native_consumeCompressedData
 * Signature: (I)V
 */JNIEXPORT void JNICALL Java_pkg_prvextention_PVRTextureData_native_1consumeCompressedData(
		JNIEnv *, jobject, jint);
/*
 * Class:     pkg_prvextention_PVRTextureData
 * Method:    native_getWidth
 * Signature: (I)I
 */JNIEXPORT jint JNICALL Java_pkg_prvextention_PVRTextureData_native_1getWidth(
		JNIEnv *, jobject, jint);
/*
 * Class:     pkg_prvextention_PVRTextureData
 * Method:    native_getHeight
 * Signature: (I)I
 */JNIEXPORT jint JNICALL Java_pkg_prvextention_PVRTextureData_native_1getHeight(
		JNIEnv *, jobject, jint);
/*
 * Class:     pkg_prvextention_PVRTextureData
 * Method:    native_useMipMaps
 * Signature: (I)Z
 */JNIEXPORT jboolean JNICALL Java_pkg_prvextention_PVRTextureData_native_1useMipMaps(
		JNIEnv *, jobject, jint);

/*
 * Class:     pkg_prvextention_PVRTextureData
 * Method:    native_dispose
 * Signature: (I)V
 */JNIEXPORT void JNICALL Java_pkg_prvextention_PVRTextureData_native_1dispose(
		JNIEnv *, jobject, jint);

class TexturePVRItem {
public:
	CCTexturePVR *pvrTexture;
	bool result;

	TexturePVRItem() {
		pvrTexture = 0;
		result = false;
	}

	~TexturePVRItem() {
		if (pvrTexture) {
			delete pvrTexture;
		}
	}
};

#ifdef __cplusplus
}
#endif
#endif
